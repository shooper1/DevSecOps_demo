pipeline {

  agent any


  environment {
    DEMO_PROJECT_HOME   =  "${env.WORKSPACE}"
    POSTGRES_BIN_DIR    = '/usr/pgsql-10/bin'
  }

  stages {

    stage('Build') {
      steps {
        sh './gradlew clean assemble'
      }
    }

    stage('Static Analysis') {
      steps {
        sh './gradlew sonarqube'
      }
    }

    stage('Static Application Security Testing') {
      steps {
        sh './gradlew findSecurityBugs'
      }
      post {
        always {
          // findbugs results
          //recordIssues enabledForFailure: true, tools: [[pattern: '**/findSecurityBugs.xml', tool: [$class: 'FindBugs']]]
          recordIssues enabledForFailure: true, tool: spotBugs(pattern: '**/findSecurityBugs.xml')
         //findbugs canComputeNew: false, defaultEncoding: '', excludePattern: '', healthy: '', includePattern: '', pattern: '**/spotbugsXml.xml', unHealthy: ''
        }
      }
    }

    stage('Analyze security of dependencies') {
      steps {
         sh './gradlew dependencyCheckAnalyze'
      }
    }

    // This is the stage where we deploy to production.  If any test
    // fails, we won't get here.  Note that we aren't really doing anything - this
    // is a token step, to indicate whether we would have deployed or not.  Nothing actually
    // happens, since this is a demo project.
    stage('Deploy to Prod') {
      steps {
        // just a token operation while we pretend to deploy
        sh 'sleep 5'
      }
    }

  }

}
